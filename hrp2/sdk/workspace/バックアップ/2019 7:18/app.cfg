INCLUDE("app_common.cfg");

#include "app.h"

DOMAIN(TDOM_APP) {
CRE_TSK(MAIN_TASK, { TA_ACT, 0, main_task, TMIN_APP_TPRI + 1, STACK_SIZE, NULL });
CRE_TSK(RIGHT_TASK, { TA_NULL, 0, right_task, TMIN_APP_TPRI, STACK_SIZE, NULL });
CRE_TSK(LEFT_TASK, { TA_NULL, 0, left_task, TMIN_APP_TPRI, STACK_SIZE, NULL });
CRE_TSK(ROTATION_TASK, { TA_NULL, 0, rotation_task, TMIN_APP_TPRI, STACK_SIZE, NULL });
CRE_TSK(DROP_TASK, { TA_NULL, 0, drop_task, TMIN_APP_TPRI, STACK_SIZE, NULL });
CRE_TSK(CURVE_TASK, { TA_NULL, 0, curve_task, TMIN_APP_TPRI, STACK_SIZE, NULL });
EV3_CRE_CYC(TRACE, {TA_NULL, 0, trace_task, 4, 0});
EV3_CRE_CYC(TRACE2, {TA_NULL, 0, trace2_task, 4, 0});
EV3_CRE_CYC(TRACE3, {TA_NULL, 0, trace3_task, 4, 0});
EV3_CRE_CYC(TRACE22, {TA_NULL, 0, trace22_task, 4, 0});
EV3_CRE_CYC(TRACE33, {TA_NULL, 0, trace33_task, 4, 0});
EV3_CRE_CYC(HT1, {TA_NULL, 0, ht1_task, 4, 0});
EV3_CRE_CYC(HT1RGB, {TA_NULL, 0, ht1rgb_task, 4, 0});
EV3_CRE_CYC(HT4BLACK, {TA_NULL, 0, ht4black_task, 4, 0});
EV3_CRE_CYC(HT4WHITE, {TA_NULL, 0, ht4white_task, 4, 0});
EV3_CRE_CYC(HT4COLOR, {TA_NULL, 0, ht4color_task, 4, 0});
EV3_CRE_CYC(HT4RED, {TA_NULL, 0, ht4red_task, 4, 0});
EV3_CRE_CYC(FOWARD, {TA_NULL, 0, foward_task, 4, 0});
EV3_CRE_CYC(BACK, {TA_NULL, 0, back_task, 4, 0});

}

ATT_MOD("app.o");
